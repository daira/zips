::

  ZIP: 209
  Title: Prohibit Negative Shielded Chain Value Pool Balances
  Owners: Sean Bowe <sean@electriccoin.co>
          Daira-Emma Hopwood <daira@electriccoin.co>
  Status: Final
  Category: Consensus
  Created: 2019-02-25
  License: MIT


Terminology
===========

The key words "MUST", "SHOULD", and "MAY" in this document are to be interpreted as described in
BCP 14 [#BCP14]_ when, and only when, they appear in all capitals.

The term "block chain" and "network upgrade" are to be interpreted as defined in [#zip-0200]_.

The "Sprout chain value pool balance" for a given block chain is the sum of all ``vpub_old``
fields for transactions in the block chain, minus the sum of all ``vpub_new`` fields for
transactions in the block chain.

The "Sapling chain value pool balance" for a given block chain is the negation of the sum of all
``valueBalanceSapling`` fields for transactions in the block chain.

The "Orchard chain value pool balance" for a given block chain is the negation of the sum of all
``valueBalanceOrchard`` fields for transactions in the block chain. (Before NU5 has activated,
the Orchard chain value pool balance is zero.)

The terms "Testnet" and "Mainnet" are to be interpreted as described in section 3.12 of the
Zcash Protocol Specification [#protocol-networks]_.


Abstract
========

This proposal defines how the consensus rules are altered such that blocks that produce negative
shielded chain value pool balances are prohibited.


Motivation
==========

It is possible for nodes to monitor the total value of notes that are shielded to, or unshielded from,
each of the Sprout, Sapling, and Orchard value pools. If the total value that is unshielded exceeds the
total value that was shielded for a given pool, a balance violation has occurred in the corresponding
shielded transaction protocol.

It would be preferable for the network to reject blocks that result in the aforementioned balance violation.
However, nodes do not currently react to such an event. Remediation may therefore require chain rollbacks
and other disruption.


Specification
=============

If any of the "Sprout chain value pool balance", "Sapling chain value pool balance", or
"Orchard chain value pool balance" would become negative in the block chain created as a result of
accepting a block, then all nodes MUST reject the block as invalid.

Nodes MAY relay transactions even if one or more of them cannot be mined due to the aforementioned
restriction.


Deployment
==========

This consensus rule is not deployed as part of a network upgrade as defined in ZIP-200 [#zip-0200]_
and there is no mechanism by which the network will synchronize to enforce this rule. Rather, all
nodes SHOULD begin enforcing this consensus rule upon acceptance of this proposal.

There is a risk that before all nodes on the network begin enforcing this consensus rule that block(s)
will be produced that violate it, potentially leading to network fragmentation. This is considered
sufficiently unlikely that the benefits of enforcing this consensus rule sooner are overwhelming.

This specification was deployed in zcashd v2.0.4 for Testnet, and in zcashd v2.0.5 for Mainnet.
The application to the Orchard chain value pool balance will be deployed from NU5 activation
[#zip-0252]_.


References
==========

.. [#BCP14] `Information on BCP 14 â€” "RFC 2119: Key words for use in RFCs to Indicate Requirement Levels" and "RFC 8174: Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words" <https://www.rfc-editor.org/info/bcp14>`_
.. [#protocol-networks] `Zcash Protocol Specification, Version 2021.2.16 or later. Section 3.12: Mainnet and Testnet <protocol/protocol.pdf#networks>`_
.. [#zip-0200] `ZIP 200: Network Upgrade Mechanism <zip-0200.rst>`_
.. [#zip-0252] `ZIP 252: Deployment of the NU5 Network Upgrade <zip-0252.rst>`_
